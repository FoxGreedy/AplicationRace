<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>

    <!-- CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/materialize.min.css">
    <link href="css/index.css" rel="stylesheet" />

    <!-- Javascript  -->
    <script src="js/jquery.js" type="text/javascript"></script>
    <script src="js/bootstrap.bundle.min.js" type="text/javascript"></script>
    <script src="js/bootstrap-dash.js"></script>
    <script src="js/scrollbarEffect.js"></script>
    <script src="js/materialize.min.js"></script>

    <!-- Grafico -->
    <script src="js/Chart.bundle.min.js"></script>

    <!-- Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="shortcut icon" href="#">

</head>

<body id="home" onload="iniciar()">

    <div id="container" style="height: 100%; position: absolute;">

        <!-- Logo -->
        <div>
            <div class="logo">
                <img id="atc" src="img/AmericanTowerLogo.png">
                <img id="lora" src="img/lora.png">
                <img id="vagoon" src="img/vagoon.png">
            </div>
        </div>

        <div id="content" class="col-md-12">
            <!-- Map -->
            <div id="estmapa" class="row">
                <div id="mapa" class="col-md-12">
                    <div id="map"></div>
                </div>
            </div>
        </div>




</body>

<script>

    $(document).ready(() => {
        carregar()
    })

    function iniciar() {
        setInterval(carregar, 10000)
    }

    var map

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -23.5911131, lng: -46.6475914 },
            zoom: 12,
            styles: [{
                "featureType": "poi",
                "stylers": [{
                    "visibility": "off"
                }]
            }],
            scrollwheel: false,
            disableDefaultUI: true
        });
    }

    function plottarGrafico(id) {

        new Chart(document.getElementById(id), {
            type: 'bar',
            data: {
                labels: ["1900", "1950", "1999", "2050"],
                datasets: [
                    {
                        label: "Africa",
                        backgroundColor: 'blue',
                        data: [133, 221, 783, 2478]
                    }, {
                        label: "Europe",
                        backgroundColor: "orange",
                        data: [408, 547, 675, 734]
                    }
                ]
            },
            options: {
                title: {
                    display: true,
                    text: 'Population growth (millions)',
                    fontColor: '#fff'

                },
                legend: {
                    labels: {
                        fontColor: '#fff'
                    },
                    fontColor: '#fff'
                }
            }
        });
    }

    // Variaveis Globais
    var pace = 0
    var Velocidade = 0
    function iniciarMarcacao(infos) {

        var unique = infos.slice().reverse()

        var ponto = new google.maps.LatLng(unique[0].gps.lat, unique[0].gps.lng)
        var marker = new google.maps.Marker({
            position: ponto,
            map: map,
            title: 'oioio'
        })

    }
    function carregar() {
        $.ajax({
            cache: false,
            url: '/dados/info',
            success: (dados) => {

                var todasInfosCompetidor = []

                let { participantes, infos, gps } = dados

                for (dado in participantes) {
                    for (info in infos) {
                        if (participantes[dado].nome == infos[info].nomeCompetidor) {
                            var gpsFiltered = gps.filter((value) => {
                                return value.devAdress === participantes[dado].devAdress
                            })

                            todasInfosCompetidor.push({ participante: participantes[dado], information: infos[info], gps: gpsFiltered })
                        }
                    }
                }

                definirColocacao(todasInfosCompetidor)
                plottarDados(todasInfosCompetidor)

            },
            error: (e) => {
                console.error('Error', e)
            }
        })
    }
    function definirColocacao(info) {
        function comparer(a, b) {
            if (a.information.distanciaTotal < b.information.distanciaTotal)
                return 1;

            if (a.information.distanciaTotal > b.information.distanciaTotal)
                return -1;

            return 0;
        }
        info.sort(comparer);
    }
    function conectar(id, value, type = 'inner') {
        if (type == 'inner') document.getElementById(id).innerHTML = value
        if (type == 'src') document.getElementById(id).src = value
    }
    function plottarDadosTelona(infos) {
            if (infos[info].gps.length != 0) {
                iniciarMarcacao(infos[info].gps)
            }
    }
    function plottarDados(infos) {
        for (info in infos) {
            plottarDadosTelona(infos)
        }
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCER9PMT7J3e41ErfeOyB9MCBCZaELJEQU&callback=initMap" async
    defer></script>

</html>