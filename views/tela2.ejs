<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>

    <!-- CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/materialize.min.css">
    <link href="css/index.css" rel="stylesheet" />

    <!-- Javascript  -->
    <script src="js/jquery.js" type="text/javascript"></script>
    <script src="js/bootstrap.bundle.min.js" type="text/javascript"></script>
    <script src="js/bootstrap-dash.js"></script>
    <script src="js/scrollbarEffect.js"></script>
    <script src="js/materialize.min.js"></script>

    <!-- Grafico -->
    <script src="js/Chart.bundle.min.js"></script>

    <!-- Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="shortcut icon" href="#">

</head>

<body id="home" onload="iniciar()">

    <div id="container" style="height: 100%; position: absolute;">

        <!-- Logo -->
        <div>
            <div class="indice">
                <img src="img/Users.png">
            </div>
            <div class="logo">
                <img id="atc" src="img/logo/AmericanTowerLogo.png">
                <img id="everynet" src="img/logo/Everynet.png">
                <img id="lora" src="img/logo/lora.png">
                <img id="tctec" src="img/logo/tctec.png">
                <img id="bup" src="img/logo/BottomUp.png">
                <img id="openlabs" src="img/logo/openlab.png">
            </div>
        </div>

        <div id="content" class="col-md-12">
            <!-- Map -->
            <div id="estmapa" class="row">
                <div id="mapa" class="col-md-12">
                    <div id="map"></div>
                </div>
            </div>
        </div>




</body>

<script>

    $(document).ready(() => {
        carregar()
    })

    function iniciar() {
        setInterval(carregar, 10000)
    }

    var map;
    var directionsDisplay1;
    var directionsService1;
    var directionsDisplay2;
    var directionsService2;

    function initMap() {
        directionsDisplay1 = new google.maps.DirectionsRenderer({
            suppressMarkers: true,
            polylineOptions: {
                strokeColor: "red"
            },
            preserveViewport: true
        });
        directionsDisplay2 = new google.maps.DirectionsRenderer({
            suppressMarkers: true,
            polylineOptions: {
                strokeColor: "red"
            },
            preserveViewport: true
        });

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -23.594978, lng: -46.6593498 },
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            zoom: 14.75,
            styles: [{
                "featureType": "poi",
                "stylers": [{
                    "visibility": "off"
                }]
            }],
            scrollwheel: false,
            disableDefaultUI: true,
        });

        directionsDisplay1.setMap(map)
        directionsDisplay2.setMap(map)

        setTimeout(calcRoute, 2000)
    }

    function calcRoute() {
        directionsService1 = new google.maps.DirectionsService()
        directionsService2 = new google.maps.DirectionsService()

        var Largada = new google.maps.LatLng(-46.664159394359, -23.587313389726);
        var Final = new google.maps.LatLng(-46.657128420850, -23.582682333561);

        var request1 = {
            origin: { lat: -23.58706598, lng: -46.66408002 },
            destination: { lat: -23.61096654, lng: -46.65575176 },
            travelMode: google.maps.TravelMode.DRIVING,
            avoidTolls: true,
            waypoints: [
                {
                    location: { lat: -23.58128435, lng: -46.66323245 },
                    stopover: true
                },
            ],
            optimizeWaypoints: true,
        };
        var request2 = {
            origin: { lat: -23.61103536, lng: -46.65561229 },
            destination: { lat: -23.58706598, lng: -46.66408002 },
            travelMode: google.maps.TravelMode.DRIVING,
            avoidTolls: true,
            waypoints: [
                {
                    location: { lat: -23.60861207, lng: -46.65335387 },
                    stopover: true
                },
            ],
            optimizeWaypoints: true,
        };

        directionsService1.route(request1, function (result, status) {
            if (status == google.maps.DirectionsStatus.OK) { // Se deu tudo certo
                directionsDisplay1.setDirections(result); // Renderizamos no mapa o resultado
            } else {
                console.log('Deu ruim')
            }
        });
        directionsService2.route(request2, function (result, status) {
            if (status == google.maps.DirectionsStatus.OK) { // Se deu tudo certo
                directionsDisplay2.setDirections(result); // Renderizamos no mapa o resultado
            } else {
                console.log('Deu ruim')
            }
        });
    }
    function plottarGrafico(id) {

        new Chart(document.getElementById(id), {
            type: 'bar',
            data: {
                labels: ["1900", "1950", "1999", "2050"],
                datasets: [
                    {
                        label: "Africa",
                        backgroundColor: 'blue',
                        data: [133, 221, 783, 2478]
                    }, {
                        label: "Europe",
                        backgroundColor: "orange",
                        data: [408, 547, 675, 734]
                    }
                ]
            },
            options: {
                title: {
                    display: true,
                    text: 'Population growth (millions)',
                    fontColor: '#fff'

                },
                legend: {
                    labels: {
                        fontColor: '#fff'
                    },
                    fontColor: '#fff'
                }
            }
        });
    }

    // Variaveis Globais
    var pace = 0
    var Velocidade = 0

    var markers = [];
    // Cores
    var cores = [
        "#1e8fff",
        "#00ffff",
        "#20b2b3",
        "#dda0dd",
        "#8c6175",
        "#a11b34",
        "#789c78",
        "#ff8c00",
        "#bdb86b",
        "#cd5b5b",
        "#696969",
        "#ff0000",
        "#fff200",
        "#593d15",
        "#245ec9",
        "#85ffbc",
        "#8fab41",
        "#dcdcdc",
        "#53adbd",
        "#e65a84",
        "#bf1dc2",
        "#000000",
        "#191970",
        "#006400",
        "#00e348",
        "#94006f",
        "#d2b48c",
        "#627814",
        "#1b5ec2",
        "#fa7972",
        "#eee8aa"
    ]

    function iniciarMarcacao(infos, color) {
        var unique = infos.slice().reverse()
// M10.292,4.229c-1.487,0-2.691,1.205-2.691,2.691s1.205,2.691,2.691,2.691s2.69-1.205,2.69-2.691S11.779,4.229,10.292,4.229z M10.292,8.535c-0.892,0-1.615-0.723-1.615-1.615S9.4,5.306,10.292,5.306c0.891,0,1.614,0.722,1.614,1.614S11.184,8.535,10.292,8.535z M10.292,1C6.725,1,3.834,3.892,3.834,7.458c0,3.567,6.458,10.764,6.458,10.764s6.458-7.196,6.458-10.764C16.75,3.892,13.859,1,10.292,1z M4.91,7.525c0-3.009,2.41-5.449,5.382-5.449c2.971,0,5.381,2.44,5.381,5.449s-5.381,9.082-5.381,9.082S4.91,10.535,4.91,7.525z'
        // M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z
        var balao = {
            path: 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z',
            strokeColor: cores[color],
            fillColor: cores[color],
            fillOpacity: 1,
            scale: 1,
            strokeWeight: 0.1
        }

        var ponto = new google.maps.LatLng(unique[0].gps.lat, unique[0].gps.lng)

        var marker = new google.maps.Marker({
            position: ponto,
            icon: balao,
            map: map
        })

        markers.push(marker)

        marker.addListener('load', function () {
            infowindow.open(map, marker)
        });
    }
    function limparMarcadores() {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
        markers.splice(0, markers.length)
    }
    function carregar() {
        $.ajax({
            cache: false,
            url: '/dados/info',
            success: (dados) => {
                var todasInfosCompetidor = []

                let { participantes, infos, gps } = dados

                for (dado in participantes) {
                    for (info in infos) {
                        if (participantes[dado].nome == infos[info].nomeCompetidor) {
                            var gpsFiltered = gps.filter((value) => {
                                return value.devAdress === participantes[dado].devAdress
                            })

                            todasInfosCompetidor.push({ participante: participantes[dado], information: infos[info], gps: gpsFiltered })
                        }
                    }
                }
                definirColocacao(todasInfosCompetidor)
                plottarDados(todasInfosCompetidor)
            },
            error: (e) => {
                console.error('Error', e)
            }
        })
    }
    function calcularMomento(momento1, momento2) {
        return momento2 - momento1
    }
    function tranformarMomentoSegundos(momento) {
        var tempo = momento.split(':')
        var horas = tempo[0]
        var minutos = tempo[1]

        segundos = (Number(horas) * 3600) + (Number(minutos) * 60) + Number(tempo[2])
        return segundos
    }
    function filtrarHorario(momento) {
        var horas = momento.split('T')
        horas = horas[1].split('.')
        return horas[0]
    }
    function definirColocacao(info) {
        function comparer(a, b) {
            if (a.information.distanciaTotal < b.information.distanciaTotal) {
                return 1;
            }
            if (a.information.distanciaTotal > b.information.distanciaTotal) {
                return -1;
            }
        }
        function comparerStatus(a, b) {
            if (a.information.status < b.information.status) {
                return 1;
            }
            if (a.information.status > b.information.status) {
                return -1;
            }
        }

        function comparerTempo(a, b) {
            if (a.information.status === 100 && b.information.status === 100) {
                let diferencaTempoA = calcularMomento(tranformarMomentoSegundos(filtrarHorario(a.information.momentoInicio)), tranformarMomentoSegundos(filtrarHorario(a.information.momentoAtual)))
                let diferencaTempoB = calcularMomento(tranformarMomentoSegundos(filtrarHorario(b.information.momentoInicio)), tranformarMomentoSegundos(filtrarHorario(b.information.momentoAtual)))
                if (diferencaTempoB < diferencaTempoA) {
                    return 1;
                }
                if (diferencaTempoB > diferencaTempoA) {
                    return -1;
                }
            }
            return 0;
        }

        info.sort(comparer).sort(comparerStatus).sort(comparerTempo);
    }
    function plottarDadosTelona(infos) {
        for (info in infos) {
            if (infos[info].gps.length != 0) {
                iniciarMarcacao(infos[info].gps, Number(infos[info].participante.corPin) - 1)
            }
            console.log(infos[info].participante.corPin)
        }
    }
    function plottarDados(infos) {
        limparMarcadores()
        plottarDadosTelona(infos)
    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAhS0HbkkKiUf2BV1T_skrfb2Pw63XzPeI&callback=initMap" async
    defer></script>

</html>